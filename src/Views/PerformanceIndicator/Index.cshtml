@using KPISolution.Models.Enums.Measurement
@using KPISolution.Models.Enums.Object
@using KPISolution.Models.Enums.Indicator
@model List<KPISolution.Models.ViewModels.Indicator.PerformanceIndicator.PerformanceIndicatorListItemViewModel>

@{
    var isKeyPerformanceIndicators = ViewBag.IsKeyPerformanceIndicators ?? false;
    var showingByResultIndicator = ViewBag.ShowingByResultIndicator ?? false;
    var showOnlyKey = ViewBag.ShowOnlyKey ?? false;
    
    var createActionTitle = isKeyPerformanceIndicators ? "Add Key Performance Indicator" : "Add Performance Indicator";
    var createActionUrl = showingByResultIndicator 
        ? Url.Action("Create", new { isKey = isKeyPerformanceIndicators, resultIndicatorId = ViewBag.ResultIndicatorId }) 
        : Url.Action("Create", new { isKey = isKeyPerformanceIndicators });

    // Determine which tab is active
    var allPIsActive = !showOnlyKey ? "active" : "";
    var onlyKPIsActive = showOnlyKey ? "active" : "";

    ViewData["Title"] = isKeyPerformanceIndicators ? "Key Performance Indicators" : "Performance Indicators";
    ViewData["Icon"] = "bi-speedometer2";
    ViewData["Subtitle"] = showingByResultIndicator 
        ? $"Performance Indicators for {ViewBag.ResultIndicatorName ?? "Unknown Result Indicator"}" 
        : "Manage and monitor your performance indicators";

    ViewData["PrimaryButton"] = (
        Text: createActionTitle,
        Controller: "PerformanceIndicator",
        Action: "Create",
        Url: string.Empty,
        Icon: "bi-plus-circle"
    );

    // Configure Breadcrumb
    if (showingByResultIndicator)
    {
        ViewData["BreadcrumbItems"] = new List<(string Text, string Controller, string Action, string Id)>
        {
            ("Result Indicators", "ResultIndicator", "Index", string.Empty),
            (ViewBag.ResultIndicatorName ?? "Unknown", "ResultIndicator", "Details", ViewBag.ResultIndicatorId?.ToString() ?? string.Empty),
            ("Performance Indicators", "PerformanceIndicator", "ByResultIndicator", ViewBag.ResultIndicatorId?.ToString() ?? string.Empty)
        };
    }
    else
    {
        ViewData["BreadcrumbItems"] = new List<(string Text, string Controller, string Action, string Id)>
        {
            (isKeyPerformanceIndicators ? "Key Performance Indicators" : "Performance Indicators",
             "PerformanceIndicator",
             isKeyPerformanceIndicators ? "KeyPerformanceIndicators" : "Index", 
             string.Empty)
        };
    }
    
    // Pagination variables
    var totalCount = ViewBag.TotalCount ?? 0;
    var pageSize = ViewBag.PageSize ?? 10;
    var currentPage = ViewBag.CurrentPage ?? 1;
    var totalPages = (int)Math.Ceiling(totalCount / (double)pageSize);
    var searchTerm = ViewBag.SearchTerm ?? "";
}

<div class="card shadow-sm mb-4">
    <div class="card-header">
        <ul class="nav nav-tabs card-header-tabs">
            <li class="nav-item">
                <a class="nav-link @allPIsActive" href="@Url.Action("Index", "PerformanceIndicator", new { showOnlyKey = false })">
                    <i class="bi bi-list-check me-1"></i>All Performance Indicators
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link @onlyKPIsActive" href="@Url.Action("Index", "PerformanceIndicator", new { showOnlyKey = true })">
                    <i class="bi bi-star-fill me-1"></i>Key Performance Indicators
                </a>
            </li>
        </ul>
    </div>
    <div class="card-body p-3">
        <div class="row align-items-center">
            <div class="col-md-8">
                <form method="get" class="row g-2">
                    <input type="hidden" name="showOnlyKey" value="@showOnlyKey.ToString().ToLower()" />
                    <div class="col-md-10">
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Search by name, code, or description..." 
                                   name="searchTerm" value="@searchTerm">
                            <button class="btn btn-outline-primary" type="submit">
                                <i class="bi bi-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-outline-secondary w-100" name="searchTerm" value="">
                            Clear
                        </button>
                    </div>
                </form>
            </div>
            <div class="col-md-4 text-end">
                <div class="dropdown d-inline-block">
                    <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-funnel"></i> Filter
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end">
                        <li><h6 class="dropdown-header">By Result Indicator</h6></li>
                        @if (ViewBag.ResultIndicators != null)
                        {
                                foreach (var ri in ViewBag.ResultIndicators)
                                {
                                        <li><a class="dropdown-item" href="@Url.Action("ByResultIndicator", "PerformanceIndicator", new { resultIndicatorId = ri.Value, showOnlyKey = showOnlyKey })">
                                            @ri.Text</a></li>
                                }
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card shadow-sm">
    <div class="card-body p-0">
        @if (Model != null && Model.Any())
        {
                <div class="table-responsive">
                    <table class="table table-hover table-striped mb-0">
                        <thead class="table-light">
                            <tr>
                                <th style="width: 5%;">Code</th>
                                <th style="width: 20%;">Name</th>
                                <th style="width: 15%;">Result Indicator</th>
                                <th style="width: 10%;">Unit</th>
                                <th style="width: 10%;">Formula</th>
                                <th style="width: 15%;">Alert Thresholds</th>
                                <th style="width: 15%;">Status</th>
                                <th style="width: 10%;">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                    <tr>
                                        <td>
                                            <span class="badge @(item.IsKey ? "bg-success" : "bg-primary")">@item.Code</span>
                                        </td>
                                        <td>
                                            <a asp-action="Details" asp-route-id="@item.Id" class="text-decoration-none fw-bold">
                                                @item.Name
                                            </a>
                                            @if (item.IsKey)
                                            {
                                                    <span class="badge bg-success ms-1">KPI</span>
                                            }
                                        </td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(item.ResultIndicatorName))
                                            {
                                                    <a asp-controller="ResultIndicator" asp-action="Details" asp-route-id="@item.ResultIndicatorId" class="text-decoration-none">
                                                        @item.ResultIndicatorName
                                                    </a>
                                                    @if (item.ResultIndicatorIsKey)
                                                    {
                                                            <span class="badge bg-danger ms-1">KRI</span>
                                                    }
                                            }
                                            else
                                            {
                                                    <span class="text-muted">Not linked</span>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@item.UnitDisplay</span>
                                        </td>
                                        <td>
                                            <small class="text-muted">@item.Formula</small>
                                        </td>
                                        <td>
                                            @if (item.MinAlertThreshold.HasValue || item.MaxAlertThreshold.HasValue)
                                            {
                                                <div class="d-flex flex-column gap-1">
                                                    @if (item.MinAlertThreshold.HasValue)
                                                    {
                                                        <span class="badge bg-warning">Min: @item.MinAlertThreshold.Value</span>
                                                    }
                                                    @if (item.MaxAlertThreshold.HasValue)
                                                    {
                                                        <span class="badge bg-danger">Max: @item.MaxAlertThreshold.Value</span>
                                                    }
                                                </div>
                                            }
                                            else
                                            {
                                                <span class="text-muted">Not set</span>
                                            }
                                        </td>
                                        <td>
                                            @if (item.CurrentValue.HasValue && item.TargetValue.HasValue)
                                            {
                                                    var percentage = (int)(item.CurrentValue.Value / item.TargetValue.Value * 100);
                                                    var progressClass = "";
                                        
                                                    if (percentage >= 100) progressClass = "bg-success";
                                                    else if (percentage >= 75) progressClass = "bg-info";
                                                    else if (percentage >= 50) progressClass = "bg-warning";
                                                    else progressClass = "bg-danger";
                                        
                                                    <div class="d-flex align-items-center">
                                                        <div class="progress flex-grow-1" style="height: 8px;">
                                                            <div class="progress-bar @progressClass" role="progressbar" 
                                                                 style="width: @Math.Min(percentage, 100)%;" 
                                                                 aria-valuenow="@percentage" aria-valuemin="0" aria-valuemax="100"></div>
                                                        </div>
                                                        <span class="ms-2 small">@percentage%</span>
                                                    </div>
                                            }
                                            else
                                            {
                                                    <span class="text-muted small">No data</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">
                                                    <i class="bi bi-pencil"></i>
                                                </a>
                                                <a asp-controller="Measurement" asp-action="Create" asp-route-indicatorId="@item.Id" 
                                                   class="btn btn-sm btn-outline-success">
                                                    <i class="bi bi-plus-circle"></i>
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                            }
                        </tbody>
                    </table>
                </div>
            
                <!-- Pagination -->
                @if (totalPages > 1)
                {
                        <div class="d-flex justify-content-between align-items-center p-3 border-top">
                            <div>
                                <span class="text-muted">Showing @(((currentPage - 1) * pageSize) + 1)-@(Math.Min(currentPage * pageSize, totalCount)) of @totalCount items</span>
                            </div>
                            <nav aria-label="Page navigation">
                                <ul class="pagination mb-0">
                                    @if (currentPage > 1)
                                    {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action(showingByResultIndicator ? "ByResultIndicator" : "Index", 
                                                                                                                                     new { page = currentPage - 1, pageSize, searchTerm, showOnlyKey, resultIndicatorId = showingByResultIndicator ? ViewBag.ResultIndicatorId : null })">
                                        Previous
                                    </a>
                                </li>
                                                        }
                            
                                    @{
                                            int startPage = Math.Max(1, currentPage - 2);
                                            int endPage = Math.Min(totalPages, startPage + 4);
                                
                                            if (endPage - startPage < 4)
                                            {
                                                    startPage = Math.Max(1, endPage - 4);
                                            }
                                    }
                            
                                    @for (int i = startPage; i <= endPage; i++)
                                    {
                                            <li class="page-item @(i == currentPage ? "active" : "")">
                                                <a class="page-link" href="@Url.Action(showingByResultIndicator ? "ByResultIndicator" : "Index", 
                                                                                                                                     new { page = i, pageSize, searchTerm, showOnlyKey, resultIndicatorId = showingByResultIndicator ? ViewBag.ResultIndicatorId : null })">
                                        @i
                                    </a>
                                </li>
                                                        }
                            
                                    @if (currentPage < totalPages)
                                    {
                                            <li class="page-item">
                                                <a class="page-link" href="@Url.Action(showingByResultIndicator ? "ByResultIndicator" : "Index", 
                                                                                                                                     new { page = currentPage + 1, pageSize, searchTerm, showOnlyKey, resultIndicatorId = showingByResultIndicator ? ViewBag.ResultIndicatorId : null })">
                                        Next
                                    </a>
                                </li>
                                                        }
                                </ul>
                            </nav>
                        </div>
                }
        }
        else
        {
                <div class="text-center py-5">
                    <div class="mb-3">
                        <i class="bi bi-bar-chart text-muted" style="font-size: 4rem;"></i>
                    </div>
                    <h5 class="text-muted mb-3">No Performance Indicators Found</h5>
                    @if (!string.IsNullOrEmpty(searchTerm))
                    {
                            <p class="text-muted mb-4">No performance indicators match your search criteria. Try different keywords or clear the search.</p>
                            <a href="@Url.Action(isKeyPerformanceIndicators ? "KeyPerformanceIndicators" : "Index")" class="btn btn-outline-secondary me-2">
                                <i class="bi bi-arrow-repeat me-1"></i>Clear Search
                            </a>
                    }
                    else
                    {
                            <p class="text-muted mb-4">
                                @if (showingByResultIndicator)
                                {
                                        <span>There are no performance indicators associated with this result indicator yet.</span>
                                }
                                else
                                {
                                        <span>Start by adding your first @(isKeyPerformanceIndicators ? "Key Performance Indicator" : "Performance Indicator").</span>
                                }
                            </p>
                    }
                    <a href="@createActionUrl" class="btn btn-primary">
                        <i class="bi bi-plus-circle me-1"></i>@createActionTitle
                    </a>
                </div>
        }
    </div>
</div>

<!-- Summary Stats Cards -->
@if (Model != null && Model.Any())
{
        <div class="row mt-4">
            <div class="col-md-3">
                <div class="card shadow-sm border-primary mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title mb-0">Total</h5>
                                <div class="text-muted small">Performance Indicators</div>
                            </div>
                            <div class="fs-1">@totalCount</div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3">
                <div class="card shadow-sm border-success mb-3">
                    <div class="card-body">
                        <div class="d-flex justify-content-between">
                            <div>
                                <h5 class="card-title mb-0">On Target</h5>
                                <div class="text-muted small">≥ 75% achieved</div>
                            </div>
                            <div class="fs-1 text-success">
                                @Model.Count(i => i.CurrentValue.HasValue && i.TargetValue.HasValue && 
                                           (i.CurrentValue.Value / i.TargetValue.Value * 100) >= 75)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card shadow-sm border-warning mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title mb-0">At Risk</h5>
                            <div class="text-muted small">50% - 75% achieved</div>
                        </div>
                        <div class="fs-1 text-warning">
                            @Model.Count(i => i.CurrentValue.HasValue && i.TargetValue.HasValue && 
                                                                              (i.CurrentValue.Value / i.TargetValue.Value * 100) >= 50 && 
                                                                              (i.CurrentValue.Value / i.TargetValue.Value * 100) < 75)
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-3">
            <div class="card shadow-sm border-danger mb-3">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h5 class="card-title mb-0">Below Target</h5>
                            <div class="text-muted small">&lt; 50% achieved</div>
                        </div>
                        <div class="fs-1 text-danger">
                            @Model.Count(i => i.CurrentValue.HasValue && i.TargetValue.HasValue && 
                                       (i.CurrentValue.Value / i.TargetValue.Value * 100) < 50)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}