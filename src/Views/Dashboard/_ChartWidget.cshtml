@model KPISolution.Models.ViewModels.Dashboard.Widgets.ChartWidgetData

<div class="card h-100">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="card-title mb-0">@Model.Title</h5>
        <div class="dropdown">
            <button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                <i class="bi bi-three-dots-vertical"></i>
            </button>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#"><i class="bi bi-info-circle me-2"></i>Xem chi tiết</a></li>
                <li><a class="dropdown-item" href="#"><i class="bi bi-download me-2"></i>Tải xuống</a></li>
            </ul>
        </div>
    </div>
    <div class="card-body">
        <div class="chart-container" style="position: relative; height: 100%; min-height: 250px;">
            <canvas id="chart-@Model.Id"></canvas>
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const ctx = document.getElementById('chart-@Model.Id').getContext('2d');

                // Chuẩn bị dữ liệu biểu đồ
                const chartData = {
                    labels: @Html.Raw(Json.Serialize(Model.Labels)),
                    datasets: @Html.Raw(Json.Serialize(Model.Datasets))
                };

                // Cấu hình biểu đồ
                const chartOptions = {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: @(Model.ShowLegend.ToString().ToLowerInvariant()),
                            position: 'top'
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false
                        }
                    }
                };

                // Tùy chỉnh thêm cho từng loại biểu đồ
                if ('@Model.ChartType.ToString()' === 'Line' || '@Model.ChartType.ToString()' === 'Bar') {
                    chartOptions.scales = {
                        y: {
                            beginAtZero: true,
                            grid: {
                                drawBorder: false,
                                zeroLineColor: 'rgba(0,0,0,0.1)',
                                color: 'rgba(0,0,0,0.1)'
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    };
                }

                // Tạo biểu đồ
                new Chart(ctx, {
                    type: '@Model.ChartType.ToString().ToLowerInvariant()',
                    data: chartData,
                    options: chartOptions
                });
            });
        </script>
    </div>

    <div class="card-footer text-muted">
        <small>@Model.TimePeriod.ToString()</small>
    </div>
</div>