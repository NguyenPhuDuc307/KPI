@using KPISolution.Models.Enums.Measurement
@using KPISolution.Models.Enums.Object
@using KPISolution.Models.Enums.Indicator
@model KPISolution.Models.ViewModels.Indicator.ResultIndicator.ResultIndicatorCreateViewModel

@{
    var isKeyResultIndicator = Model?.IsKey ?? (ViewBag.IsKey != null && ViewBag.IsKey);

    ViewData["Title"] = isKeyResultIndicator ? "Create Key Result Indicator" : "Create Result Indicator";
    ViewData["Icon"] = "bi-graph-up";
    ViewData["Subtitle"] = isKeyResultIndicator
    ? "Add a new Key Result Indicator (KRI)"
    : "Add a new Result Indicator (RI)";

    var backAction = isKeyResultIndicator ? "KeyResultIndicators" : "Index";

    ViewData["SecondaryButton"] = new ValueTuple<string, string, string, string, string>(
    "Back to List",
    "ResultIndicator",
    backAction,
    "",
    "bi-arrow-left"
    );

    // Configure Breadcrumb
    ViewData["BreadcrumbItems"] = new List<(string Text, string Controller, string Action, string Id)>
{
(isKeyResultIndicator ? "Key Result Indicators" : "Result Indicators", "ResultIndicator", isKeyResultIndicator ?
"KeyResultIndicators" : "Index", ""),
("Create", "ResultIndicator", "Create", "")
};
}

<div class="card shadow-sm">
    <div class="card-header">
        <h5 class="mb-0 text-primary">
            <i class="bi bi-plus-circle me-2"></i>@ViewData["Title"]
        </h5>
    </div>
    <div class="card-body p-4">
        <form asp-action="Create" method="post">
            <input type="hidden" asp-for="IsKey" value="@isKeyResultIndicator" />

            @if (ViewBag.SuccessFactorId != null)
            {
                <input type="hidden" asp-for="SuccessFactorId" value="@ViewBag.SuccessFactorId" />
            }

            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Name" class="form-label">Name <span class="text-danger">*</span></label>
                        <input asp-for="Name" class="form-control" placeholder="Enter indicator name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Code" class="form-label">Code <span class="text-danger">*</span></label>
                        <div class="d-flex">
                            <div class="position-relative flex-grow-1">
                                <input asp-for="Code" class="form-control pe-5"
                                    placeholder="@(isKeyResultIndicator ? "KRI-YYYYMM###" : "RI-YYYYMM###")" />
                                <div class="position-absolute top-50 end-0 translate-middle-y pe-3 d-none"
                                    id="codeValidCheck">
                                    <i class="bi bi-check-circle-fill text-success"></i>
                                </div>
                            </div>
                            <button type="button" id="generateCodeBtn" class="btn btn-outline-secondary ms-2">
                                <i class="bi bi-magic me-1"></i> Tạo mã
                            </button>
                        </div>
                        <span asp-validation-for="Code" class="text-danger"></span>
                        <div class="form-text">Định dạng: @(isKeyResultIndicator ? "KRI-YYYYMM###" : "RI-YYYYMM###")
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group mb-3">
                <label asp-for="Description" class="form-label">Description</label>
                <textarea asp-for="Description" class="form-control" rows="3"
                    placeholder="Enter a detailed description of this indicator"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="SuccessFactorId" class="form-label">Success Factor <span
                                class="text-danger">*</span></label>
                        <select asp-for="SuccessFactorId" class="form-select" asp-items="ViewBag.SuccessFactors">
                            <option value="">-- Select Success Factor --</option>
                        </select>
                        <span asp-validation-for="SuccessFactorId" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Business Perspective <span class="text-danger">*</span></label>
                        <select name="BusinessPerspective" class="form-select"
                            asp-items="Html.GetEnumSelectList<BusinessPerspective>()">
                            <option value="">-- Select Perspective --</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="TargetValue" class="form-label">Target Value</label>
                        <input asp-for="TargetValue" class="form-control" type="number" step="0.01" />
                        <span asp-validation-for="TargetValue" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Unit" class="form-label">Unit <span class="text-danger">*</span></label>
                        <select asp-for="Unit" asp-items="Html.GetEnumSelectList<MeasurementUnit>()"
                            class="form-select">
                            <option value="">-- Select Unit --</option>
                        </select>
                        <span asp-validation-for="Unit" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group mb-3">
                        <label asp-for="Direction" class="form-label">Value Interpretation</label>
                        <select asp-for="Direction" class="form-select"
                            asp-items="Html.GetEnumSelectList<MeasurementDirection>()">
                            <option value="">-- Select Direction --</option>
                        </select>
                        <span asp-validation-for="Direction" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label class="form-label">Indicator Type <span class="text-danger">*</span></label>
                        <select name="IndicatorType" class="form-select"
                            asp-items="Html.GetEnumSelectList<BasicIndicatorType>()">
                            <option value="">-- Select Indicator Type --</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group mb-3">
                        <label asp-for="Frequency" class="form-label">Measurement Frequency <span
                                class="text-danger">*</span></label>
                        <select asp-for="Frequency" asp-items="Html.GetEnumSelectList<MeasurementFrequency>()"
                            class="form-select">
                            <option value="">-- Select Frequency --</option>
                        </select>
                        <span asp-validation-for="Frequency" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <hr class="my-4" />

            <div class="d-flex justify-content-end">
                <a asp-action="@backAction" class="btn btn-secondary me-2">Cancel</a>
                <button type="submit" class="btn btn-primary">
                    <i class="bi bi-save me-1"></i>Create @(isKeyResultIndicator ? "KRI" : "RI")
                </button>
            </div>
        </form>
    </div>
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Xử lý tạo mã tự động
            var generateCodeBtn = document.getElementById('generateCodeBtn');
            var codeInput = document.getElementById('Code');
            var codeValidCheck = document.getElementById('codeValidCheck');
            var isKey = @(isKeyResultIndicator.ToString().ToLower());

            // Regular expression để kiểm tra định dạng mã
            var codePattern = isKey
                ? /^KRI-\d{6}\d{3}$/ // KRI-YYYYMM### pattern
                : /^RI-\d{6}\d{3}$/;  // RI-YYYYMM### pattern

            // Hàm kiểm tra mã
            function validateCode() {
                var code = codeInput.value.trim();
                if (code && codePattern.test(code)) {
                    codeValidCheck.classList.remove('d-none');
                } else {
                    codeValidCheck.classList.add('d-none');
                }
            }

            // Kiểm tra ngay khi tải trang
            validateCode();

            // Kiểm tra khi người dùng nhập
            codeInput.addEventListener('input', validateCode);
            codeInput.addEventListener('change', validateCode);

            if (generateCodeBtn) {
                generateCodeBtn.addEventListener('click', function () {
                    // Lấy thời gian hiện tại
                    var now = new Date();
                    var year = now.getFullYear();
                    // Tháng bắt đầu từ 0, nên phải +1 và đảm bảo luôn có 2 chữ số
                    var month = (now.getMonth() + 1).toString().padStart(2, '0');

                    // Tạo phần ngẫu nhiên cho mã (3 chữ số)
                    var randomNum = Math.floor(Math.random() * 900) + 100; // 100-999

                    // Tạo mã với định dạng RI-YYYYMM### hoặc KRI-YYYYMM###
                    var prefix = isKey ? 'KRI-' : 'RI-';
                    var generatedCode = prefix + year + month + randomNum;

                    // Gán mã vào input
                    codeInput.value = generatedCode;

                    // Kiểm tra và hiển thị dấu tích
                    validateCode();

                    // Thêm hiệu ứng highlight để người dùng dễ nhận biết
                    codeInput.classList.add('bg-light');
                    setTimeout(function () {
                        codeInput.classList.remove('bg-light');
                    }, 300);
                });
            }
        });
    </script>
}