@model KPISolution.Models.ViewModels.KPI.KpiListViewModel
@using KPISolution.Models.Enums
@using KPISolution.Extensions
@{
    ViewData["Title"] = "Chỉ số kết quả then chốt";
    ViewData["Icon"] = "bi-graph-up";
    ViewData["Subtitle"] = "Chỉ số kết quả then chốt đo lường hiệu suất tổng thể của tổ chức";
    ViewData["ShowFilterPanel"] = true;

    if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
    {
        ViewData["PrimaryButton"] = ("Thêm mới KRI", "KRI", "Create", "", "bi-plus-circle");
    }
    
    var filterDisplay = !string.IsNullOrEmpty(Model.Filter?.SearchTerm) || 
                        !string.IsNullOrEmpty(Model.Filter?.Department) ||
                        Model.Filter?.Status.HasValue == true ||
                        Model.Filter?.BusinessArea.HasValue == true ||
                        Model.Filter?.ImpactLevel.HasValue == true;
}

@section FilterContent {
    <form id="filterForm" asp-action="Index" asp-controller="Kri" method="get">
        <input type="hidden" name="KpiType" value="@KpiType.KeyResultIndicator" />
        
        <div class="row g-3">
            <div class="col-md-4">
                <div class="form-floating">
                    <input type="text" class="form-control" placeholder="Tìm kiếm..." 
                           name="SearchTerm" value="@Model.Filter?.SearchTerm">
                    <label>Tìm kiếm theo tên, mã hoặc mô tả</label>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select" name="Department">
                        <option value="">Tất cả phòng ban</option>
                        @foreach (var item in Model.Departments)
                        {
                            <option value="@item.Value" 
                                    selected="@(item.Value == Model.Filter?.Department)">
                                @item.Text
                            </option>
                        }
                    </select>
                    <label>Phòng ban</label>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select" name="Status">
                        <option value="">Tất cả trạng thái</option>
                        @foreach (KpiStatus status in Enum.GetValues(typeof(KpiStatus)))
                        {
                            <option value="@((int)status)" 
                                    selected="@(Model.Filter?.Status == status)">
                                @(status switch {
                                    KpiStatus.OnTarget => "Đạt mục tiêu",
                                    KpiStatus.AtRisk => "Có rủi ro",
                                    KpiStatus.BelowTarget => "Không đạt",
                                    KpiStatus.Draft => "Bản nháp",
                                    KpiStatus.Active => "Hoạt động",
                                    _ => status.ToString().SplitCamelCase()
                                })
                            </option>
                        }
                    </select>
                    <label>Trạng thái</label>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select" name="BusinessArea">
                        <option value="">Tất cả lĩnh vực</option>
                        @foreach (var item in Model.BusinessAreas)
                        {
                            <option value="@item.Value" 
                                    selected="@(item.Value == Model.Filter?.BusinessArea?.ToString())">
                                @item.Text
                            </option>
                        }
                    </select>
                    <label>Lĩnh vực kinh doanh</label>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-floating">
                    <select class="form-select" name="ImpactLevel">
                        <option value="">Tất cả mức độ tác động</option>
                        @foreach (var item in Model.ImpactLevels)
                        {
                            <option value="@item.Value" 
                                    selected="@(item.Value == Model.Filter?.ImpactLevel?.ToString())">
                                @item.Text
                            </option>
                        }
                    </select>
                    <label>Mức độ tác động</label>
                </div>
            </div>
            <div class="col-12">
                <div class="d-flex justify-content-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="bi bi-search me-1"></i>Tìm kiếm
                    </button>
                    <a asp-action="Index" asp-controller="Kri" class="btn btn-outline-secondary">
                        <i class="bi bi-x-circle me-1"></i>Xóa bộ lọc
                    </a>
                </div>
            </div>
        </div>
    </form>
}

<!-- Results Card -->
<div class="card shadow-sm">
    <div class="card-header bg-transparent">
        <div class="d-flex justify-content-between align-items-center">
            <h5 class="mb-0">Kết quả (@Model.TotalCount)</h5>
            <div class="dropdown">
                <button class="btn btn-outline-secondary btn-sm dropdown-toggle" type="button"
                    data-bs-toggle="dropdown">
                    Sắp xếp
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            KpiType = KpiType.KeyResultIndicator,
                            SortBy = "name", 
                            SortDirection = "asc" 
                        })">Tên (A-Z)</a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            KpiType = KpiType.KeyResultIndicator,
                            SortBy = "name", 
                            SortDirection = "desc" 
                        })">Tên (Z-A)</a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            KpiType = KpiType.KeyResultIndicator,
                            SortBy = "code", 
                            SortDirection = "asc" 
                        })">Mã (A-Z)</a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            KpiType = KpiType.KeyResultIndicator,
                            SortBy = "effectivedate", 
                            SortDirection = "desc" 
                        })">Mới nhất</a>
                    </li>
                    <li>
                        <a class="dropdown-item" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            KpiType = KpiType.KeyResultIndicator,
                            SortBy = "effectivedate", 
                            SortDirection = "asc" 
                        })">Cũ nhất</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
    <div class="card-body p-0">
        @if (Model.KpiItems.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover mb-0" id="kriTable">
                    <thead class="table-light">
                        <tr>
                            <th>Mã</th>
                            <th>Tên KRI</th>
                            <th>Giá trị hiện tại</th>
                            <th>Mục tiêu</th>
                            <th>Phòng ban</th>
                            <th>Loại hoạt động</th>
                            <th>Trạng thái</th>
                            <th width="120">Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.KpiItems)
                        {
                            <tr>
                                <td>
                                    <span class="badge bg-secondary">@item.Code</span>
                                </td>
                                <td class="text-truncate" style="max-width: 200px;">
                                    <a asp-action="Details" asp-controller="Kri" asp-route-id="@item.Id" 
                                       class="text-decoration-none fw-medium">@item.Name</a>
                                </td>
                                <td>
                                    @if (item.CurrentValue.HasValue)
                                    {
                                        <span>@item.CurrentValue.Value.ToString("N2") @item.MeasurementUnit</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa đo lường</span>
                                    }
                                </td>
                                <td>@item.TargetValue.ToString("N2") @item.MeasurementUnit</td>
                                <td>@item.Department</td>
                                <td>@item.ActivityTypeName</td>
                                <td>
                                    @{
                                        var statusClass = item.Status switch
                                        {
                                            KpiStatus.Active => "bg-info",
                                            KpiStatus.OnTarget => "bg-success", 
                                            KpiStatus.AtRisk => "bg-warning text-dark",
                                            KpiStatus.BelowTarget => "bg-danger",
                                            KpiStatus.Draft => "bg-secondary",
                                            KpiStatus.UnderReview => "bg-info text-dark",
                                            KpiStatus.Deprecated => "bg-warning text-dark",
                                            KpiStatus.Archived => "bg-dark",
                                            _ => "bg-secondary"
                                        };
                                        
                                        var statusText = item.Status switch {
                                            KpiStatus.OnTarget => "Đạt mục tiêu",
                                            KpiStatus.AtRisk => "Có rủi ro",
                                            KpiStatus.BelowTarget => "Không đạt",
                                            KpiStatus.Draft => "Bản nháp",
                                            KpiStatus.Active => "Hoạt động",
                                            _ => item.StatusString
                                        };
                                    }
                                    <span class="badge @statusClass">@statusText</span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a class="btn btn-sm btn-info text-white" asp-action="Details" asp-controller="Kri" 
                                           asp-route-id="@item.Id" title="Chi tiết">
                                            <i class="bi bi-info-circle"></i>
                                        </a>
                                        @if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
                                        {
                                            <a class="btn btn-sm btn-primary" asp-action="Edit" asp-controller="Kri" 
                                               asp-route-id="@item.Id" title="Chỉnh sửa">
                                                <i class="bi bi-pencil"></i>
                                            </a>
                                            <a class="btn btn-sm btn-danger" asp-action="Delete" asp-controller="Kri" 
                                               asp-route-id="@item.Id" title="Xóa">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-search fs-1 text-muted"></i>
                <p class="mt-3">Không tìm thấy KRI nào phù hợp với điều kiện tìm kiếm.</p>
                <a asp-action="Create" asp-controller="Kri" class="btn btn-primary mt-2">
                    <i class="bi bi-plus-lg"></i> Thêm mới KRI
                </a>
            </div>
        }
    </div>
    <div class="card-footer d-flex justify-content-between">
        <div>
            Hiển thị @((Model.CurrentPage - 1) * Model.PageSize + (Model.KpiItems.Any() ? 1 : 0)) - 
            @((Model.CurrentPage - 1) * Model.PageSize + Model.KpiItems.Count) của @Model.TotalCount
        </div>
        @if (Model.TotalPages > 1)
        {
            <nav aria-label="Page navigation">
                <ul class="pagination mb-0">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", "Kri", new {
                                SearchTerm = Model.Filter?.SearchTerm,
                                Department = Model.Filter?.Department,
                                Status = Model.Filter?.Status,
                                BusinessArea = Model.Filter?.BusinessArea,
                                ImpactLevel = Model.Filter?.ImpactLevel,
                                KpiType = KpiType.KeyResultIndicator,
                                SortBy = Model.Filter?.SortBy,
                                SortDirection = Model.Filter?.SortDirection,
                                page = i
                            })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        }
    </div>
</div>

<!-- Pagination -->
@if (Model.TotalPages > 1)
{
    <div class="d-flex justify-content-between align-items-center mt-4">
        <div class="text-muted">
            Hiển thị @(((Model.CurrentPage - 1) * Model.PageSize) + 1) đến 
            @(Math.Min(Model.TotalCount, Model.CurrentPage * Model.PageSize)) 
            trong tổng số @Model.TotalCount kết quả
        </div>
        <nav aria-label="KRI navigation">
            <ul class="pagination mb-0">
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", "Kri", new { 
                            SearchTerm = Model.Filter?.SearchTerm,
                            Department = Model.Filter?.Department,
                            Status = Model.Filter?.Status,
                            BusinessArea = Model.Filter?.BusinessArea,
                            ImpactLevel = Model.Filter?.ImpactLevel,
                            SortBy = Model.SortBy,
                            SortDirection = Model.SortDirection,
                            KpiType = KpiType.KeyResultIndicator,
                            page = i 
                        })">@i</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            // Auto-submit the form when select values change
            $('.auto-submit').change(function () {
                $('#filterForm').submit();
            });
            
            $('#kriTable').DataTable({
                order: [[1, 'asc']],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/vi.json'
                },
                responsive: true,
                pageLength: 25
            });

            // Handle help tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            // Handle filter panel toggle
            $("#filterToggle").click(function() {
                $("#filterPanel").toggleClass("show");
                $(this).find("i").toggleClass("bi-chevron-down bi-chevron-up");
            });
        });
    </script>
} 