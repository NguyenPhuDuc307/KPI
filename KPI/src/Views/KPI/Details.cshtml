@model KPISolution.Models.ViewModels.KPI.KpiDetailsViewModel
@using KPISolution.Models.Enums
@{
    string kpiTypePrefix = Model.KpiType switch
    {
        KpiType.KeyResultIndicator => "KRI",
        KpiType.ResultIndicator => "RI", 
        KpiType.PerformanceIndicator => "PI",
        _ => "KPI"
    };
    ViewData["Title"] = $"{kpiTypePrefix}: {Model.Code}";
    
    // Prepare chart data
    var chartLabels = new List<string>();
    var chartValues = new List<decimal>();
    var chartTargetValue = "null";
    
    if (Model.HistoricalValues != null && Model.HistoricalValues.Any())
    {
        foreach (var item in Model.HistoricalValues.OrderByDescending(h => h.MeasurementDate))
        {
            chartLabels.Add($"'{item.MeasurementDate.ToString("dd/MM/yyyy")}'");
            chartValues.Add(item.ActualValue);
        }
    }
    
    if (Model.TargetValue.HasValue)
    {
        chartTargetValue = Model.TargetValue.Value.ToString(System.Globalization.CultureInfo.InvariantCulture);
    }
    
    var chartLabelsJson = string.Join(",", chartLabels);
    var chartValuesJson = string.Join(",", chartValues);
}

<div class="container-fluid px-4 pt-4 pb-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb mb-1">
                    <li class="breadcrumb-item"><a asp-action="Index">@kpiTypePrefix</a></li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Code</li>
                </ol>
            </nav>
            <h1 class="h2 mb-0">@Model.Name</h1>
        </div>
        
        <div class="d-flex">
            @if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
            {
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary me-2">
                        <i class="bi bi-pencil me-1"></i> Chỉnh sửa
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-outline-danger">
                        <i class="bi bi-trash me-1"></i> Xóa
                    </a>
            }
        </div>
    </div>
    
    <div class="row g-4">
        <!-- KPI Information Card -->
        <div class="col-lg-8">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-transparent">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Thông tin KPI</h5>
                        <span class="badge @GetKpiTypeBadgeClass(Model.KpiType)">@GetKpiTypeDisplayName(Model.KpiType)</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <table class="table table-sm">
                                <tbody>
                                    <tr>
                                        <th width="150">Mã @kpiTypePrefix:</th>
                                        <td><span class="badge bg-secondary">@Model.Code</span></td>
                                    </tr>
                                    <tr>
                                        <th>Phòng ban:</th>
                                        <td>@Model.Department</td>
                                    </tr>
                                    <tr>
                                        <th>Danh mục:</th>
                                        <td>@Model.Category</td>
                                    </tr>
                                    <tr>
                                        <th>Đơn vị đo:</th>
                                        <td>@Model.MeasurementUnit</td>
                                    </tr>
                                    <tr>
                                        <th>Mục tiêu:</th>
                                        <td>@Model.TargetValue</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="col-md-6">
                            <table class="table table-sm">
                                <tbody>
                                    <tr>
                                        <th width="150">Tần suất đo:</th>
                                        <td>@Model.MeasurementFrequency</td>
                                    </tr>
                                    <tr>
                                        <th>Xu hướng:</th>
                                        <td>
                                            @if (Model.MeasurementDirection == "Higher")
                                            {
                                                    <span class="text-success"><i class="bi bi-arrow-up"></i> Cao hơn là tốt hơn</span>
                                            }
                                            else if (Model.MeasurementDirection == "Lower")
                                            {
                                                    <span class="text-danger"><i class="bi bi-arrow-down"></i> Thấp hơn là tốt hơn</span>
                                            }
                                            else
                                            {
                                                    <span>@Model.MeasurementDirection</span>
                                            }
                                        </td>
                                    </tr>
                                    <tr>
                                        <th>Trạng thái:</th>
                                        <td><span class="badge @GetStatusBadgeClass(Model.Status)">@GetStatusDisplayName(Model.Status)</span></td>
                                    </tr>
                                    <tr>
                                        <th>Ngày hiệu lực:</th>
                                        <td>@Model.EffectiveDate.ToString("dd/MM/yyyy")</td>
                                    </tr>
                                    <tr>
                                        <th>Người chịu trách nhiệm:</th>
                                        <td>@Model.Owner</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    
                    <div class="mb-4">
                        <h6 class="fw-bold">Mô tả:</h6>
                        <p class="mb-0">@(string.IsNullOrEmpty(Model.Description) ? "Không có mô tả" : Model.Description)</p>
                    </div>
                    
                    <div class="mb-4">
                        <h6 class="fw-bold">Cách tính toán:</h6>
                        <p class="mb-0">@(string.IsNullOrEmpty(Model.CalculationMethod) ? "Không có thông tin" : Model.CalculationMethod)</p>
                    </div>
                    
                    <div>
                        <h6 class="fw-bold">Nguồn dữ liệu:</h6>
                        <p class="mb-0">@(string.IsNullOrEmpty(Model.DataSource) ? "Không có thông tin" : Model.DataSource)</p>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Current Status Card -->
        <div class="col-lg-4">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-transparent">
                    <h5 class="mb-0">Trạng thái hiện tại</h5>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <div class="display-3 fw-bold">
                            @(Model.CurrentValue.HasValue ? Model.CurrentValue.Value.ToString("0.##") : "N/A")
                            @if (!string.IsNullOrEmpty(Model.MeasurementUnit))
                            {
                                    <span class="fs-6 text-muted">@Model.MeasurementUnit</span>
                            }
                        </div>
                        
                        @if (Model.CurrentValue.HasValue && Model.TargetValue.HasValue)
                        {
                                var progressPercentage = Math.Min(100, Math.Max(0, (Model.CurrentValue.Value / Model.TargetValue.Value) * 100));
                                var progressColorClass = progressPercentage switch
                                {
                                        >= 90 => "bg-success",
                                        >= 70 => "bg-info",
                                        >= 40 => "bg-warning",
                                        _ => "bg-danger"
                                };
                            
                                <div class="mt-3 mb-2">
                                    <div class="progress" style="height: 8px;">
                                        <div class="progress-bar @progressColorClass" role="progressbar" style="width: @progressPercentage%"></div>
                                    </div>
                                    <div class="d-flex justify-content-between mt-1">
                                        <small class="text-muted">0</small>
                                        <small class="text-muted">@Model.TargetValue @Model.MeasurementUnit</small>
                                    </div>
                                </div>
                            
                                <div class="my-3">
                                    @if (Model.MeasurementDirection == "Higher" && Model.CurrentValue >= Model.TargetValue)
                                    {
                                            <div class="alert alert-success">
                                                <i class="bi bi-check-circle me-2"></i> Đã đạt mục tiêu
                                            </div>
                                    }
                                    else if (Model.MeasurementDirection == "Lower" && Model.CurrentValue <= Model.TargetValue)
                                    {
                                            <div class="alert alert-success">
                                                <i class="bi bi-check-circle me-2"></i> Đã đạt mục tiêu
                                            </div>
                                    }
                                    else
                                    {
                                            <div class="alert alert-warning">
                                                <i class="bi bi-exclamation-triangle me-2"></i> Chưa đạt mục tiêu
                                            </div>
                                    }
                                </div>
                        }
                    </div>
                    
                    <div class="mb-3">
                        <h6 class="fw-bold">Cập nhật gần nhất:</h6>
                        <p class="mb-0">@(Model.LastUpdated.HasValue ? Model.LastUpdated.Value.ToString("dd/MM/yyyy HH:mm") : "Chưa có cập nhật")</p>
                    </div>
                    
                    @if (Model.TrendDirection.HasValue)
                    {
                            <div class="mb-3">
                                <h6 class="fw-bold">Xu hướng:</h6>
                                <div>
                                    @{
                                            var trendClass = Model.TrendDirection switch
                                            {
                                                    TrendDirection.Up => "text-success",
                                                    TrendDirection.Down => "text-danger",
                                                    _ => "text-secondary"
                                            };
                                    
                                            var trendIcon = Model.TrendDirection switch
                                            {
                                                    TrendDirection.Up => "bi-arrow-up",
                                                    TrendDirection.Down => "bi-arrow-down",
                                                    _ => "bi-dash"
                                            };
                                    
                                            var trendDisplay = Model.TrendDirection switch
                                            {
                                                    TrendDirection.Up => "Tăng",
                                                    TrendDirection.Down => "Giảm",
                                                    _ => "Không đổi"
                                            };
                                    }
                                    <span class="@trendClass">
                                        <i class="bi @trendIcon"></i> @trendDisplay
                                        @if (Model.TrendValue.HasValue)
                                        {
                                                <span>(@(Model.TrendValue.Value > 0 ? "+" : "")@Model.TrendValue.Value.ToString("0.##") @Model.MeasurementUnit)</span>
                                        }
                                    </span>
                                </div>
                            </div>
                    }
                    
                    <div class="d-grid mt-4">
                        <a href="@Url.Action("Create", "Measurement", new { kpiId = Model.Id })" class="btn btn-primary">
                            <i class="bi bi-plus-circle me-2"></i>Thêm giá trị mới
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Historical Data Card -->
        @if (Model.HistoricalValues != null && Model.HistoricalValues.Any())
        {
                <div class="col-12">
                    <div class="card shadow-sm">
                        <div class="card-header bg-transparent">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="mb-0">Dữ liệu lịch sử</h5>
                                <div>
                                    <button type="button" class="btn btn-sm btn-outline-secondary">
                                        <i class="bi bi-download me-1"></i>Xuất dữ liệu
                                    </button>
                                </div>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="chart-container" style="height: 300px;">
                                <canvas id="kpiHistoryChart"></canvas>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent p-0">
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Ngày đo</th>
                                            <th>Giá trị</th>
                                            <th>Ghi chú</th>
                                            <th>Người cập nhật</th>
                                            <th>Thời gian cập nhật</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.HistoricalValues.Take(5))
                                        {
                                                <tr>
                                                    <td>@item.MeasurementDate.ToString("dd/MM/yyyy")</td>
                                                    <td>
                                                        <span class="fw-medium">@item.ActualValue.ToString("0.##") @Model.MeasurementUnit</span>
                                                    </td>
                                                    <td>@(string.IsNullOrEmpty(item.Notes) ? "-" : item.Notes)</td>
                                                    <td>@item.CreatedBy</td>
                                                    <td>@item.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                                </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
        }
        
        <!-- Linked CSFs Card -->
        @if (Model.LinkedCsfs != null && Model.LinkedCsfs.Any())
        {
                <div class="col-12">
                    <div class="card shadow-sm">
                        <div class="card-header bg-transparent">
                            <h5 class="mb-0">Yếu tố thành công quan trọng (CSF) liên kết</h5>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Mã CSF</th>
                                            <th>Tên</th>
                                            <th>Danh mục</th>
                                            <th>Phòng ban</th>
                                            <th>Trạng thái</th>
                                            <th>Tiến độ</th>
                                            <th>Thao tác</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var csf in Model.LinkedCsfs)
                                        {
                                                <tr>
                                                    <td><span class="badge bg-secondary">@csf.Code</span></td>
                                                    <td>@csf.Name</td>
                                                    <td>@csf.Category</td>
                                                    <td>@csf.Department</td>
                                                    <td>
                                                        <span class="badge @GetCsfStatusBadgeClass(csf.Status)">@csf.Status</span>
                                                    </td>
                                                    <td>
                                                        <div class="progress" style="height: 8px; width: 100px;">
                                                            <div class="progress-bar bg-primary" role="progressbar" style="width: @csf.ProgressPercentage%"></div>
                                                        </div>
                                                        <span class="small">@csf.ProgressPercentage%</span>
                                                    </td>
                                                    <td>
                                                        <a href="@Url.Action("Details", "Csf", new { id = csf.Id })" class="btn btn-sm btn-outline-primary">
                                                            <i class="bi bi-eye"></i>
                                                        </a>
                                                    </td>
                                                </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
        }

        <!-- Thêm phần mối quan hệ chỉ số -->
        <div class="card shadow-sm mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="bi bi-diagram-3 me-1"></i>Mối quan hệ chỉ số
                </h5>
                @if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
                {
                    <div>
                        <a asp-controller="Pi" asp-action="Create" asp-route-kpiId="@Model.Id" class="btn btn-sm btn-success">
                            <i class="bi bi-plus-circle me-1"></i>Thêm PI mới
                        </a>
                    </div>
                }
            </div>
            <div class="card-body p-0">
                <div class="p-4 bg-white">
                    <div class="relationship-diagram">
                        <div class="text-center mb-3">
                            <div class="d-inline-block mx-2 mb-3">
                                <div class="card border-0 shadow-sm" style="min-width: 250px; background-color: #339af0; color: white;">
                                    <div class="card-body p-3">
                                        <div class="text-uppercase small fw-medium mb-1 opacity-75">Key Performance Indicator (KPI) - Hiện tại</div>
                                        <div class="fw-bold fs-5">@Model.Code</div>
                                        <div>@Model.Name</div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        @if (Model.RelatedPIs != null && Model.RelatedPIs.Any())
                        {
                            <div class="text-center mb-3">
                                <i class="bi bi-arrow-down text-muted fs-3"></i>
                            </div>

                            <div class="text-center">
                                @foreach (var pi in Model.RelatedPIs.Take(3))
                                {
                                    <div class="d-inline-block mx-2 mb-3">
                                        <div class="card border-0 shadow-sm" style="min-width: 250px; background-color: #69db7c; color: white;">
                                            <div class="card-body p-3">
                                                <div class="text-uppercase small fw-medium mb-1 opacity-75">Performance Indicator (PI)</div>
                                                <div class="fw-bold fs-5">@pi.Code</div>
                                                <div>@pi.Name</div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                
                                @if (Model.RelatedPIs.Count > 3)
                                {
                                    <div class="mt-2">
                                        <small class="text-muted">+ @(Model.RelatedPIs.Count - 3) PI khác</small>
                                    </div>
                                }
                            </div>
                            
                            @if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
                            {
                                <div class="text-center mt-3">
                                    <a asp-controller="Pi" asp-action="Create" asp-route-kpiId="@Model.Id" class="btn btn-sm btn-success">
                                        <i class="bi bi-plus-circle me-1"></i>Thêm PI khác
                                    </a>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="alert alert-info text-center m-3">
                                Chưa có PI nào liên kết với KPI này
                                @if (User.IsInRole("Administrator") || User.IsInRole("Manager"))
                                {
                                    <div class="mt-3">
                                        <a asp-controller="Pi" asp-action="Create" asp-route-kpiId="@Model.Id" class="btn btn-sm btn-success">
                                            <i class="bi bi-plus-circle me-1"></i>Thêm PI mới
                                        </a>
                                    </div>
                                }
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            @if (Model.HistoricalValues != null && Model.HistoricalValues.Any())
            {
                <text>initHistoryChart();</text>
            }
        });
    
        function initHistoryChart() {
            const ctx = document.getElementById('kpiHistoryChart').getContext('2d');
            
            // Data prepared by server-side code
            const labels = [@Html.Raw(chartLabelsJson)];
            const values = [@Html.Raw(chartValuesJson)];
            const targetValue = @Html.Raw(chartTargetValue);
            
            // Create gradient for chart background
            const gradient = ctx.createLinearGradient(0, 0, 0, 400);
            gradient.addColorStop(0, 'rgba(13, 110, 253, 0.3)');
            gradient.addColorStop(1, 'rgba(13, 110, 253, 0.0)');
            
            // Create datasets
            const datasets = [
                {
                    label: 'Giá trị',
                    data: values,
                    backgroundColor: gradient,
                    borderColor: 'rgba(13, 110, 253, 1)',
                    borderWidth: 2,
                    tension: 0.3,
                    fill: true,
                    pointBackgroundColor: 'rgba(13, 110, 253, 1)',
                    pointRadius: 4,
                    pointHoverRadius: 6
                }
            ];
            
            if (targetValue !== null) {
                datasets.push({
                    label: 'Mục tiêu',
                    data: Array(labels.length).fill(targetValue),
                    borderColor: 'rgba(220, 53, 69, 1)',
                    borderWidth: 2,
                    borderDash: [5, 5],
                    fill: false,
                    pointRadius: 0
                });
            }
        
            // Create chart
            const chart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        tooltip: {
                            mode: 'index',
                            intersect: false,
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: false,
                            grid: {
                                drawBorder: false
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
        }
    </script>

    <style>
        .relationship-diagram .card {
            transition: all 0.3s ease;
        }
        
        .relationship-diagram .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0,0,0,0.12), 0 4px 8px rgba(0,0,0,0.06) !important;
        }
    </style>
}

@functions {
    private string GetKpiTypeBadgeClass(KpiType kpiType)
    {
        return kpiType switch
        {
            KpiType.KeyResultIndicator => "bg-danger",
            KpiType.PerformanceIndicator => "bg-primary",
            KpiType.ResultIndicator => "bg-success",
            _ => "bg-secondary"
        };
    }
    
    private string GetKpiTypeDisplayName(KpiType kpiType)
    {
        return kpiType switch
        {
            KpiType.KeyResultIndicator => "Chỉ số kết quả then chốt (KRI)",
            KpiType.PerformanceIndicator => "Chỉ số hiệu suất (PI)",
            KpiType.ResultIndicator => "Chỉ số kết quả (RI)",
            _ => kpiType.ToString()
        };
    }
    
    private string GetStatusBadgeClass(KpiStatus status)
    {
        return status switch
        {
            KpiStatus.OnTarget => "bg-success",
            KpiStatus.AtRisk => "bg-warning text-dark",
            KpiStatus.BelowTarget => "bg-danger",
            KpiStatus.Draft => "bg-secondary",
            KpiStatus.Active => "bg-info",
            _ => "bg-secondary"
        };
    }
    
    private string GetStatusDisplayName(KpiStatus status)
    {
        return status switch
        {
            KpiStatus.OnTarget => "Theo kế hoạch",
            KpiStatus.AtRisk => "Có rủi ro",
            KpiStatus.BelowTarget => "Không theo kế hoạch",
            KpiStatus.Draft => "Bản nháp",
            KpiStatus.Active => "Đang hoạt động",
            KpiStatus.UnderReview => "Đang xem xét",
            KpiStatus.Approved => "Đã phê duyệt",
            KpiStatus.Archived => "Đã lưu trữ",
            KpiStatus.Deprecated => "Không sử dụng",
            _ => status.ToString()
        };
    }
    
    private string GetCsfStatusBadgeClass(CSFStatus status)
    {
        return status switch
        {
            CSFStatus.InProgress => "bg-success",
            CSFStatus.AtRisk => "bg-warning text-dark",
            CSFStatus.Completed => "bg-info",
            CSFStatus.Cancelled => "bg-danger",
            CSFStatus.NotStarted => "bg-secondary",
            _ => "bg-secondary"
        };
    }
}
