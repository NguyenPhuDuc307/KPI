@model KPISolution.Models.ViewModels.Dashboard.Widgets.AlertWidgetData

<div class="alert-widget h-100">
    <div class="card h-100 border-0 shadow-sm">
        <div class="card-header bg-transparent">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">@(string.IsNullOrEmpty(Model.Title) ? "Cảnh báo hệ thống" : Model.Title)</h5>
                @if (!string.IsNullOrEmpty(Model.AlertType))
                {
                            <span
                                class="badge @GetAlertTypeBadgeClass(Model.AlertType)">@GetAlertTypeDisplay(Model.AlertType)</span>
                }
            </div>
        </div>
        <div class="card-body">
            <div class="alert @GetAlertTypeClass(Model.AlertType) mb-0">
                <div class="d-flex">
                    @if (!string.IsNullOrEmpty(Model.IconClass))
                    {
                                <div class="me-3">
                                    <i class="@Model.IconClass fs-3"></i>
                                </div>
                    }
                    <div>
                        <h5 class="alert-heading mb-1">@Model.Message</h5>
                        @if (!string.IsNullOrEmpty(Model.DetailedMessage))
                        {
                                    <p class="mb-0">@Model.DetailedMessage</p>
                        }

                        @if (!string.IsNullOrEmpty(Model.ActionUrl) && !string.IsNullOrEmpty(Model.ActionText))
                        {
                                    <div class="mt-3">
                                        <a href="@Model.ActionUrl" class="btn @GetButtonClass(Model.AlertType) btn-sm">
                                            @Model.ActionText
                                        </a>
                                    </div>
                        }
                    </div>

                    @if (Model.IsDismissible)
                    {
                                <button type="button" class="btn-close ms-auto" aria-label="Close"></button>
                    }
                </div>
            </div>

            @if (Model.ExpiresAt.HasValue)
            {
                        <div class="mt-2 text-end small text-muted">
                            Hết hạn: @Model.ExpiresAt.Value.ToString("dd/MM/yyyy HH:mm")
                        </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetAlertTypeClass(string alertType)
    {
        return alertType?.ToLower() switch
        {
            "warning" => "alert-warning",
            "danger" => "alert-danger",
            "info" => "alert-info",
            "success" => "alert-success",
            _ => "alert-primary"
        };
    }

    private string GetAlertTypeBadgeClass(string alertType)
    {
        return alertType?.ToLower() switch
        {
            "warning" => "bg-warning text-dark",
            "danger" => "bg-danger",
            "info" => "bg-info text-dark",
            "success" => "bg-success",
            _ => "bg-primary"
        };
    }

    private string GetAlertTypeDisplay(string alertType)
    {
        return alertType?.ToLower() switch
        {
            "warning" => "Cảnh báo",
            "danger" => "Nguy hiểm",
            "info" => "Thông tin",
            "success" => "Thành công",
            _ => alertType ?? string.Empty
        };
    }

    private string GetButtonClass(string alertType)
    {
        return alertType?.ToLower() switch
        {
            "warning" => "btn-warning",
            "danger" => "btn-danger",
            "info" => "btn-info",
            "success" => "btn-success",
            _ => "btn-primary"
        };
    }
}