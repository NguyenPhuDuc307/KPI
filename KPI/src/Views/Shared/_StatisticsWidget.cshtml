@model KPISolution.Models.ViewModels.Dashboard.Widgets.StatisticsWidgetData

<div class="statistics-widget h-100">
    <div class="card h-100 border-0 shadow-sm">
        @if (!string.IsNullOrEmpty(Model.Title))
        {
            <div class="card-header bg-transparent">
                <h5 class="mb-0">@Model.Title</h5>
                @if (!string.IsNullOrEmpty(Model.Description))
                {
                    <small class="text-muted">@Model.Description</small>
                }
            </div>
        }

        <div class="card-body">
            @if (Model.StatItems != null && Model.StatItems.Any())
            {
                <div class="row g-2">
                    @foreach (var item in Model.StatItems)
                    {
                        <div class="@GetColumnClass(Model.StatItems.Count)">
                            <div class="p-3 bg-light rounded h-100">
                                <div class="d-flex justify-content-between align-items-start mb-1">
                                    <h6 class="text-muted mb-0">@item.Label</h6>
                                    @if (!string.IsNullOrEmpty(item.IconClass))
                                    {
                                        <i class="@item.IconClass @GetIconColorClass(item.Trend)"></i>
                                    }
                                </div>
                                <div class="d-flex align-items-end">
                                    <div class="h3 mb-0 @GetValueColorClass(item.Trend)">@item.Value</div>
                                    @if (!string.IsNullOrEmpty(item.Unit))
                                    {
                                        <div class="ms-1 text-muted">@item.Unit</div>
                                    }
                                </div>
                                @if (!string.IsNullOrEmpty(item.ComparisonText))
                                {
                                    <div class="small mt-2 @GetTrendColorClass(item.Trend)">
                                        @if (item.Trend == "up")
                                        {
                                            <i class="bi bi-arrow-up-short"></i>
                                        }
                                        else if (item.Trend == "down")
                                        {
                                            <i class="bi bi-arrow-down-short"></i>
                                        }
                                        @item.ComparisonText
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="d-flex align-items-center mb-3">
                    @if (!string.IsNullOrEmpty(Model.IconClass))
                    {
                        <div class="display-4 @Model.ColorClass me-3">
                            <i class="@Model.IconClass"></i>
                        </div>
                    }
                    <div>
                        <div class="h2 mb-0 @Model.ColorClass">@Model.Count</div>
                        <div class="text-muted">@Model.StatType</div>

                        @if (Model.Change != 0)
                        {
                            <div class="small mt-1 @GetChangeColorClass(Model.ChangeDirection)">
                                @if (Model.ChangeDirection == "up")
                                {
                                    <i class="bi bi-arrow-up-short"></i>
                                }
                                else if (Model.ChangeDirection == "down")
                                {
                                    <i class="bi bi-arrow-down-short"></i>
                                }
                                @Model.Change so với tháng trước
                            </div>
                        }
                    </div>
                </div>

                @if (Model.DetailedStats != null && Model.DetailedStats.Any())
                {
                    <div class="mt-3">
                        <h6 class="mb-2 text-muted small">Chi tiết</h6>
                        <div class="row g-2">
                            @foreach (var stat in Model.DetailedStats)
                            {
                                <div class="col-6">
                                    <div class="p-2 bg-light rounded">
                                        <div class="small text-muted">@stat.Key</div>
                                        <div class="fw-bold">@stat.Value</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="text-center py-2 text-muted small mt-3">
                        <p class="mb-0">Không có dữ liệu chi tiết</p>
                    </div>
                }
            }
        </div>

        @if (!string.IsNullOrEmpty(Model.FooterText))
        {
            <div class="card-footer bg-transparent text-muted small">
                @Model.FooterText
            </div>
        }
    </div>
</div>

@functions {
    private string GetColumnClass(int itemCount)
    {
        return itemCount switch
        {
            1 => "col-12",
            2 => "col-6",
            3 => "col-md-4 col-6",
            4 => "col-md-3 col-6",
            _ => "col-md-3 col-6"
        };
    }

    private string GetTrendColorClass(string trend)
    {
        return trend?.ToLower() switch
        {
            "up" => "text-success",
            "down" => "text-danger",
            _ => "text-muted"
        };
    }

    private string GetIconColorClass(string trend)
    {
        return trend?.ToLower() switch
        {
            "up" => "text-success",
            "down" => "text-danger",
            _ => "text-primary"
        };
    }

    private string GetValueColorClass(string trend)
    {
        return trend?.ToLower() switch
        {
            "up" => "text-success",
            "down" => "text-danger",
            _ => ""
        };
    }

    private string GetChangeColorClass(string changeDirection)
    {
        return changeDirection?.ToLower() switch
        {
            "up" => "text-success",
            "down" => "text-danger",
            _ => "text-muted"
        };
    }
}