@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SuccessFactorDetailsViewModel

@{
    ViewData["Icon"] = "bi-check-circle-fill";
    ViewData["Title"] = "Chi tiết yếu tố thành công";
    ViewData["PageTitle"] = "Chi tiết yếu tố thành công";
    ViewData["PageDescription"] = "Thông tin chi tiết về yếu tố thành công (CSF) và các chỉ số đánh giá";
    ViewData["ActiveMenu"] = "SuccessFactor";
}

<div class="d-flex justify-content-between mb-3">
    <div>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-list me-1"></i> Danh sách yếu tố
        </a>
    </div>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary me-2">
            <i class="fas fa-edit me-1"></i> Chỉnh sửa
        </a>
        <a asp-action="UpdateProgress" asp-route-id="@Model.Id" class="btn btn-success me-2">
            <i class="fas fa-tasks me-1"></i> Cập nhật tiến độ
        </a>
        <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
            <i class="fas fa-trash me-1"></i> Xóa
        </a>
    </div>
</div>

<div class="row">
    <div class="col-lg-8">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Thông tin tổng quan</h5>
            </div>
            <div class="card-body">
                <div class="row align-items-center mb-4">
                    <div class="col-md-8">
                        <h4 class="mb-1">@Model.Name</h4>
                        <p class="text-muted mb-1">
                            <small>Mã: <span class="fw-bold">@Model.Code</span></small>
                        </p>
                        <p class="mb-0">
                            @if (Model.IsCritical)
                            {
                                    <span class="badge bg-danger"><i class="fas fa-star me-1"></i> Yếu tố cốt lõi</span>
                            }
                            @switch (Model.Category)
                            {
                                    case SuccessFactorCategory.Financial:
                                            <span class="badge bg-success">Tài chính</span>
                                            break;
                                    case SuccessFactorCategory.Customer:
                                            <span class="badge bg-primary">Khách hàng</span>
                                            break;
                                    case SuccessFactorCategory.InternalProcess:
                                            <span class="badge bg-info">Quy trình nội bộ</span>
                                            break;
                                    case SuccessFactorCategory.LearningAndGrowth:
                                            <span class="badge bg-warning">Học hỏi & Phát triển</span>
                                            break;
                                    default:
                                            <span class="badge bg-secondary">@Model.Category</span>
                                            break;
                            }
                            @switch (Model.Priority)
                            {
                                    case PriorityLevel.Critical:
                                            <span class="badge bg-danger">Ưu tiên: Cực cao</span>
                                            break;
                                    case PriorityLevel.High:
                                            <span class="badge bg-warning">Ưu tiên: Cao</span>
                                            break;
                                    case PriorityLevel.Medium:
                                            <span class="badge bg-info">Ưu tiên: Trung bình</span>
                                            break;
                                    case PriorityLevel.Low:
                                            <span class="badge bg-secondary">Ưu tiên: Thấp</span>
                                            break;
                                    default:
                                            <span class="badge bg-secondary">Ưu tiên: @Model.Priority</span>
                                            break;
                            }
                            @switch (Model.RiskLevel)
                            {
                                    case RiskLevel.High:
                                            <span class="badge bg-danger">Rủi ro: Cao</span>
                                            break;
                                    case RiskLevel.Medium:
                                            <span class="badge bg-warning">Rủi ro: Trung bình</span>
                                            break;
                                    case RiskLevel.Low:
                                            <span class="badge bg-success">Rủi ro: Thấp</span>
                                            break;
                                    case RiskLevel.Negligible:
                                            <span class="badge bg-info">Rủi ro: Không đáng kể</span>
                                            break;
                                    case RiskLevel.None:
                                            <span class="badge bg-light text-dark">Rủi ro: Không có</span>
                                            break;
                                    default:
                                            <span class="badge bg-secondary">Rủi ro: @Model.RiskLevel</span>
                                            break;
                            }
                        </p>
                    </div>
                    <div class="col-md-4">
                        <div class="progress-circle mx-auto" data-value="@Model.ProgressPercentage">
                            <span class="progress-value fw-bold">
                                @Model.ProgressPercentage<span>%</span>
                            </span>
                        </div>
                        <p class="mt-2 mb-0 text-center">
                            @switch (Model.Status)
                            {
                                    case SuccessFactorStatus.NotStarted:
                                            <span class="badge bg-secondary">Chưa bắt đầu</span>
                                            break;
                                    case SuccessFactorStatus.InProgress:
                                            <span class="badge bg-primary">Đang tiến hành</span>
                                            break;
                                    case SuccessFactorStatus.OnTrack:
                                            <span class="badge bg-success">Đúng tiến độ</span>
                                            break;
                                    case SuccessFactorStatus.AtRisk:
                                            <span class="badge bg-warning">Có rủi ro</span>
                                            break;
                                    case SuccessFactorStatus.OffTrack:
                                            <span class="badge bg-danger">Chậm tiến độ</span>
                                            break;
                                    case SuccessFactorStatus.Completed:
                                            <span class="badge bg-info">Hoàn thành</span>
                                            break;
                                    default:
                                            <span class="badge bg-secondary">@Model.Status</span>
                                            break;
                            }
                        </p>
                    </div>
                </div>

                <div class="mb-4">
                    <h6 class="fw-bold">Mô tả chi tiết:</h6>
                    <p>@(string.IsNullOrEmpty(Model.Description) ? "Không có mô tả" : Model.Description)</p>
                </div>

                <div class="row mb-3">
                    <div class="col-md-6">
                        <h6 class="fw-bold">Phòng ban phụ trách:</h6>
                        <p>
                            @if (Model.DepartmentId.HasValue)
                            {
                                    <a asp-controller="Department" asp-action="Details" asp-route-id="@Model.DepartmentId">
                                        <i class="fas fa-building me-1"></i> @Model.DepartmentName
                                    </a>
                            }
                            else
                            {
                                    <span class="text-muted">Chưa chỉ định</span>
                            }
                        </p>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold">Mục tiêu liên quan:</h6>
                        <p>
                            @if (Model.ObjectiveId.HasValue)
                            {
                                    <a asp-controller="Objective" asp-action="Details" asp-route-id="@Model.ObjectiveId">
                                        <i class="fas fa-bullseye me-1"></i> @Model.ObjectiveName
                                    </a>
                            }
                            else
                            {
                                    <span class="text-muted">Chưa liên kết với mục tiêu nào</span>
                            }
                        </p>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <h6 class="fw-bold">Ngày tạo:</h6>
                        <p>@Model.CreatedDate.ToString("dd/MM/yyyy HH:mm")</p>
                    </div>
                    <div class="col-md-6">
                        <h6 class="fw-bold">Cập nhật lần cuối:</h6>
                        <p>@Model.LastUpdated.ToString("dd/MM/yyyy HH:mm")</p>
                    </div>
                </div>
            </div>
        </div>

        @if (Model.Indicators != null && Model.Indicators.Any())
        {
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Chỉ số đánh giá (KPIs)</h5>
                        <a href="#" class="btn btn-sm btn-primary">
                            <i class="fas fa-plus me-1"></i> Thêm chỉ số
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Tên chỉ số</th>
                                        <th>Trạng thái</th>
                                        <th>Giá trị hiện tại</th>
                                        <th>Đơn vị</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var indicator in Model.Indicators)
                                    {
                                            <tr>
                                                <td>
                                                    <a href="#">@indicator.Name</a>
                                                    <small class="d-block text-muted">@indicator.Code</small>
                                                </td>
                                                <td>
                                                    @switch (indicator.Status)
                                                    {
                                                            case IndicatorStatus.OnTarget:
                                                                    <span class="badge bg-success">Tốt</span>
                                                                    break;
                                                            case IndicatorStatus.AtRisk:
                                                                    <span class="badge bg-warning">Cảnh báo</span>
                                                                    break;
                                                            case IndicatorStatus.BelowTarget:
                                                                    <span class="badge bg-danger">Nguy hiểm</span>
                                                                    break;
                                                            default:
                                                                    <span class="badge bg-secondary">@indicator.Status</span>
                                                                    break;
                                                    }
                                                </td>
                                                <td>@indicator.CurrentValue</td>
                                                <td>@indicator.Unit</td>
                                                <td class="text-end">
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button"
                                                            data-bs-toggle="dropdown">
                                                            <i class="fas fa-ellipsis-h"></i>
                                                        </button>
                                                        <ul class="dropdown-menu dropdown-menu-end">
                                                            <li><a class="dropdown-item" href="#"><i class="fas fa-eye me-2"></i> Xem
                                                                    chi tiết</a></li>
                                                            <li><a class="dropdown-item" href="#"><i class="fas fa-edit me-2"></i> Chỉnh
                                                                    sửa</a></li>
                                                            <li><a class="dropdown-item" href="#"><i class="fas fa-chart-line me-2"></i>
                                                                    Biểu đồ</a></li>
                                                            <li>
                                                                <hr class="dropdown-divider">
                                                            </li>
                                                            <li><a class="dropdown-item text-danger" href="#"><i
                                                                        class="fas fa-trash-alt me-2"></i> Gỡ bỏ liên kết</a></li>
                                                        </ul>
                                                    </div>
                                                </td>
                                            </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
        }
        else
        {
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Chỉ số đánh giá (KPIs)</h5>
                        <a href="#" class="btn btn-sm btn-primary">
                            <i class="fas fa-plus me-1"></i> Thêm chỉ số
                        </a>
                    </div>
                    <div class="card-body">
                        <div class="alert alert-info mb-0">
                            <i class="fas fa-info-circle me-2"></i> Chưa có chỉ số đánh giá nào được liên kết với yếu tố thành
                            công này.
                            Hãy thêm các KPI để theo dõi và đánh giá hiệu quả của yếu tố thành công.
                        </div>
                    </div>
                </div>
        }

        @if (Model.ProgressHistory != null && Model.ProgressHistory.Any())
        {
            <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Lịch sử cập nhật tiến độ</h5>
                    <a asp-action="UpdateProgress" asp-route-id="@Model.Id" class="btn btn-sm btn-success">
                        <i class="fas fa-plus me-1"></i> Cập nhật mới
                    </a>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Ngày cập nhật</th>
                                    <th>Tiến độ</th>
                                    <th>Trạng thái</th>
                                    <th>Rủi ro</th>
                                    <th>Người cập nhật</th>
                                    <th>Nhận xét</th>
                                    <th>Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var update in Model.ProgressHistory)
                                {
                                    <tr>
                                        <td>@update.UpdateDate.ToString("dd/MM/yyyy")</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="progress flex-grow-1" style="height: 8px;">
                                                    <div class="progress-bar @(update.ProgressPercentage < 30 ? "bg-danger" : update.ProgressPercentage < 70 ? "bg-warning" : "bg-success")" 
                                                         role="progressbar" style="width: @update.ProgressPercentage%" 
                                                         aria-valuenow="@update.ProgressPercentage" aria-valuemin="0" aria-valuemax="100">
                                                    </div>
                                                </div>
                                                <span class="ms-2">@update.ProgressPercentage%</span>
                                            </div>
                                            @if (update.ProgressPercentage != update.PreviousPercentage)
                                            {
                                                <small class="text-muted d-block">
                                                    @if (update.ProgressPercentage > update.PreviousPercentage)
                                                    {
                                                        <span class="text-success">
                                                            <i class="fas fa-arrow-up"></i> +@(update.ProgressPercentage - update.PreviousPercentage)%
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-danger">
                                                            <i class="fas fa-arrow-down"></i> @(update.ProgressPercentage - update.PreviousPercentage)%
                                                        </span>
                                                    }
                                                </small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge @(update.Status switch {
                                                SuccessFactorStatus.NotStarted => "bg-secondary",
                                                SuccessFactorStatus.InProgress => "bg-primary",
                                                SuccessFactorStatus.AtRisk => "bg-warning",
                                                SuccessFactorStatus.OffTrack => "bg-info",
                                                SuccessFactorStatus.OnTrack => "bg-success",
                                                SuccessFactorStatus.Completed => "bg-success",
                                                SuccessFactorStatus.Cancelled => "bg-danger",
                                                _ => "bg-secondary"
                                            })">
                                                @(update.Status switch {
                                                    SuccessFactorStatus.NotStarted => "Chưa bắt đầu",
                                                    SuccessFactorStatus.InProgress => "Đang tiến hành",
                                                    SuccessFactorStatus.AtRisk => "Có rủi ro",
                                                    SuccessFactorStatus.OffTrack => "Chậm tiến độ",
                                                    SuccessFactorStatus.OnTrack => "Đúng tiến độ",
                                                    SuccessFactorStatus.Completed => "Hoàn thành",
                                                    SuccessFactorStatus.Cancelled => "Đã hủy",
                                                    _ => update.Status.ToString()
                                                })
                                            </span>
                                            @if (update.Status != update.PreviousStatus)
                                            {
                                                <small class="text-muted d-block">
                                                    Trước đó: <span class="badge bg-light text-dark">
                                                        @(update.PreviousStatus switch {
                                                            SuccessFactorStatus.NotStarted => "Chưa bắt đầu",
                                                            SuccessFactorStatus.InProgress => "Đang tiến hành",
                                                            SuccessFactorStatus.AtRisk => "Có rủi ro",
                                                            SuccessFactorStatus.OffTrack => "Chậm tiến độ",
                                                            SuccessFactorStatus.OnTrack => "Đúng tiến độ",
                                                            SuccessFactorStatus.Completed => "Hoàn thành",
                                                            SuccessFactorStatus.Cancelled => "Đã hủy",
                                                            _ => update.PreviousStatus.ToString()
                                                        })
                                                    </span>
                                                </small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge @(update.RiskLevel switch {
                                                RiskLevel.None => "bg-light text-dark",
                                                RiskLevel.Negligible => "bg-info",
                                                RiskLevel.Low => "bg-success",
                                                RiskLevel.Medium => "bg-warning",
                                                RiskLevel.High => "bg-danger",
                                                RiskLevel.Critical => "bg-danger",
                                                _ => "bg-secondary"
                                            })">
                                                @(update.RiskLevel switch {
                                                    RiskLevel.None => "Không có",
                                                    RiskLevel.Negligible => "Không đáng kể",
                                                    RiskLevel.Low => "Thấp",
                                                    RiskLevel.Medium => "Trung bình",
                                                    RiskLevel.High => "Cao",
                                                    RiskLevel.Critical => "Nghiêm trọng",
                                                    _ => update.RiskLevel.ToString()
                                                })
                                            </span>
                                        </td>
                                        <td>@update.CreatedBy</td>
                                        <td>
                                            @if (!string.IsNullOrEmpty(update.Comments))
                                            {
                                                <span class="text-truncate d-inline-block" style="max-width: 200px;" 
                                                    data-bs-toggle="tooltip" title="@update.Comments">
                                                    @update.Comments
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">-</span>
                                            }
                                        </td>
                                        <td>
                                            <div class="d-flex">
                                                <button type="button" class="btn btn-sm btn-outline-primary me-1" 
                                                        data-bs-toggle="modal" data-bs-target="#detailModal-@update.Id">
                                                    <i class="bi bi-info-circle me-1"></i> Chi tiết
                                                </button>
                                                <button type="button" class="btn btn-sm btn-outline-danger" 
                                                        data-bs-toggle="modal" data-bs-target="#deleteModal-@update.Id">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                    
                                    <!-- Detail modal -->
                                    <div class="modal fade" id="detailModal-@update.Id" tabindex="-1" aria-labelledby="detailModalLabel-@update.Id" aria-hidden="true">
                                        <div class="modal-dialog modal-lg">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="detailModalLabel-@update.Id">
                                                        <i class="bi bi-info-circle me-2"></i>Chi tiết cập nhật tiến độ
                                                    </h5>
                                                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body">
                                                    <div class="row mb-4">
                                                        <div class="col-md-6">
                                                            <h6 class="border-bottom pb-2 mb-3">Thông tin cơ bản</h6>
                                                            <div class="mb-2">
                                                                <div class="d-flex justify-content-between">
                                                                    <strong>Ngày cập nhật:</strong>
                                                                    <span>@update.UpdateDate.ToString("dd/MM/yyyy HH:mm")</span>
                                                                </div>
                                                            </div>
                                                            <div class="mb-2">
                                                                <div class="d-flex justify-content-between">
                                                                    <strong>Người cập nhật:</strong>
                                                                    <span>@update.CreatedBy</span>
                                                                </div>
                                                            </div>
                                                            <div class="mb-2">
                                                                <div class="d-flex justify-content-between">
                                                                    <strong>Thời gian cập nhật:</strong>
                                                                    <span>@update.CreatedAt.ToString("dd/MM/yyyy HH:mm")</span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="col-md-6">
                                                            <h6 class="border-bottom pb-2 mb-3">Trạng thái & Tiến độ</h6>
                                                            <div class="mb-3">
                                                                <strong>Tiến độ:</strong>
                                                                <div class="progress mt-1" style="height: 25px;">
                                                                    <div class="progress-bar @(update.ProgressPercentage < 30 ? "bg-danger" : update.ProgressPercentage < 70 ? "bg-warning" : "bg-success")" 
                                                                        role="progressbar" 
                                                                        style="width: @update.ProgressPercentage%" 
                                                                        aria-valuenow="@update.ProgressPercentage" 
                                                                        aria-valuemin="0" 
                                                                        aria-valuemax="100">
                                                                        @update.ProgressPercentage%
                                                                    </div>
                                                                </div>
                                                                @if (update.ProgressPercentage != update.PreviousPercentage)
                                                                {
                                                                    <small class="d-block mt-1">
                                                                        Thay đổi: 
                                                                        @if (update.ProgressPercentage > update.PreviousPercentage)
                                                                        {
                                                                            <span class="text-success">
                                                                                <i class="fas fa-arrow-up"></i> +@(update.ProgressPercentage - update.PreviousPercentage)%
                                                                            </span>
                                                                        }
                                                                        else
                                                                        {
                                                                            <span class="text-danger">
                                                                                <i class="fas fa-arrow-down"></i> @(update.ProgressPercentage - update.PreviousPercentage)%
                                                                            </span>
                                                                        }
                                                                        <span class="text-muted">(từ @update.PreviousPercentage%)</span>
                                                                    </small>
                                                                }
                                                            </div>
                                                            <div class="mb-2">
                                                                <div class="d-flex justify-content-between">
                                                                    <strong>Trạng thái:</strong>
                                                                    <span class="badge @(update.Status switch {
                                                                        SuccessFactorStatus.NotStarted => "bg-secondary",
                                                                        SuccessFactorStatus.InProgress => "bg-primary",
                                                                        SuccessFactorStatus.AtRisk => "bg-warning",
                                                                        SuccessFactorStatus.OffTrack => "bg-danger",
                                                                        SuccessFactorStatus.OnTrack => "bg-success",
                                                                        SuccessFactorStatus.Completed => "bg-success",
                                                                        SuccessFactorStatus.Cancelled => "bg-danger",
                                                                        _ => "bg-secondary"
                                                                    })">
                                                                        @(update.Status switch {
                                                                            SuccessFactorStatus.NotStarted => "Chưa bắt đầu",
                                                                            SuccessFactorStatus.InProgress => "Đang tiến hành",
                                                                            SuccessFactorStatus.AtRisk => "Có rủi ro",
                                                                            SuccessFactorStatus.OffTrack => "Chậm tiến độ",
                                                                            SuccessFactorStatus.OnTrack => "Đúng tiến độ",
                                                                            SuccessFactorStatus.Completed => "Hoàn thành",
                                                                            SuccessFactorStatus.Cancelled => "Đã hủy",
                                                                            _ => update.Status.ToString()
                                                                        })
                                                                    </span>
                                                                </div>
                                                            </div>
                                                            <div class="mb-2">
                                                                <div class="d-flex justify-content-between">
                                                                    <strong>Mức độ rủi ro:</strong>
                                                                    <span class="badge @(update.RiskLevel switch {
                                                                        RiskLevel.None => "bg-light text-dark",
                                                                        RiskLevel.Negligible => "bg-info",
                                                                        RiskLevel.Low => "bg-success",
                                                                        RiskLevel.Medium => "bg-warning",
                                                                        RiskLevel.High => "bg-danger",
                                                                        RiskLevel.Critical => "bg-danger",
                                                                        _ => "bg-secondary"
                                                                    })">
                                                                        @(update.RiskLevel switch {
                                                                            RiskLevel.None => "Không có",
                                                                            RiskLevel.Negligible => "Không đáng kể",
                                                                            RiskLevel.Low => "Thấp",
                                                                            RiskLevel.Medium => "Trung bình",
                                                                            RiskLevel.High => "Cao",
                                                                            RiskLevel.Critical => "Nghiêm trọng",
                                                                            _ => update.RiskLevel.ToString()
                                                                        })
                                                                    </span>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>

                                                    <h6 class="border-bottom pb-2 mb-3">Ghi chú & Nhận xét</h6>
                                                    <div class="row">
                                                        <div class="col-12">
                                                            <div class="mb-3">
                                                                <strong>Nhận xét:</strong>
                                                                <p class="mt-1 mb-0">@(string.IsNullOrEmpty(update.Comments) ? "Không có" : update.Comments)</p>
                                                            </div>
                                                            <div class="mb-0">
                                                                <strong>Các vấn đề gặp phải:</strong>
                                                                <p class="mt-1 mb-0">@(string.IsNullOrEmpty(update.Issues) ? "Không có" : update.Issues)</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    
                                    <!-- Delete confirmation modal -->
                                    <div class="modal fade" id="deleteModal-@update.Id" tabindex="-1" aria-labelledby="deleteModalLabel-@update.Id" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="deleteModalLabel-@update.Id">Xác nhận xóa</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <div class="modal-body text-start">
                                                    <p>Bạn có chắc chắn muốn xóa bản ghi cập nhật tiến độ này không?</p>
                                                    <p class="text-danger">Hành động này không thể hoàn tác.</p>
                                                    <div class="alert alert-info">
                                                        <strong>Thông tin cập nhật:</strong>
                                                        <ul class="mb-0">
                                                            <li>Ngày: @update.UpdateDate.ToString("dd/MM/yyyy")</li>
                                                            <li>Tiến độ: @update.ProgressPercentage%</li>
                                                            <li>Trạng thái: @(update.Status switch {
                                                                SuccessFactorStatus.NotStarted => "Chưa bắt đầu",
                                                                SuccessFactorStatus.InProgress => "Đang tiến hành",
                                                                SuccessFactorStatus.AtRisk => "Có rủi ro",
                                                                SuccessFactorStatus.OffTrack => "Chậm tiến độ",
                                                                SuccessFactorStatus.Completed => "Hoàn thành",
                                                                SuccessFactorStatus.Cancelled => "Đã hủy",
                                                                _ => update.Status.ToString()
                                                            })</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                                    <form asp-action="DeleteProgressUpdate" method="post">
                                                        <input type="hidden" name="id" value="@update.Id" />
                                                        <input type="hidden" name="successFactorId" value="@Model.Id" />
                                                        <button type="submit" class="btn btn-danger">Xác nhận xóa</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="col-lg-4">
        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Diễn biến tiến độ</h5>
            </div>
            <div class="card-body">
                <canvas id="progressChart" height="250"></canvas>
            </div>
        </div>

        <div class="card mb-4">
            <div class="card-header">
                <h5 class="mb-0">Phụ thuộc & Liên kết</h5>
            </div>
            <div class="card-body">
                <div class="mb-3">
                    <h6 class="fw-bold">Mục tiêu liên quan:</h6>
                    @if (Model.ObjectiveId.HasValue)
                    {
                            <div class="d-flex align-items-center mb-2">
                                <i class="fas fa-bullseye text-primary me-2"></i>
                                <div>
                                    <a asp-controller="Objective" asp-action="Details" asp-route-id="@Model.ObjectiveId">
                                        @Model.ObjectiveName
                                    </a>
                                </div>
                            </div>
                    }
                    else
                    {
                            <p class="text-muted">Không có mục tiêu liên quan</p>
                    }
                </div>

                <div>
                    <h6 class="fw-bold">Các chỉ số đo lường:</h6>
                    @if (Model.Indicators != null && Model.Indicators.Any())
                    {
                            foreach (var indicator in Model.Indicators)
                            {
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-chart-line text-success me-2"></i>
                                        <div>
                                            <a href="#">
                                                @indicator.Name
                                            </a>
                                        </div>
                                    </div>
                            }
                    }
                    else
                    {
                            <p class="text-muted">Chưa có chỉ số đo lường</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
        <style>
            .progress-circle {
                position: relative;
                width: 80px;
                height: 80px;
                border-radius: 50%;
                background-color: #f0f0f0;
            }

            .progress-circle:after {
                content: '';
                position: absolute;
                top: 10px;
                left: 10px;
                width: 60px;
                height: 60px;
                border-radius: 50%;
                background-color: white;
            }

            .progress-circle .progress-value {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 18px;
                z-index: 1;
            }
            
            /* Thêm padding cho card chứa bảng lịch sử cập nhật */
            .card.mb-4 {
                padding-bottom: 60px;
            }
        </style>
}

@section Scripts {
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script>
            // Set up progress circle
            document.querySelectorAll('.progress-circle').forEach(function (el) {
                let percentage = el.getAttribute('data-value');
                let color;

                if (percentage < 25) color = '#dc3545'; // danger
                else if (percentage < 50) color = '#ffc107'; // warning
                else if (percentage < 75) color = '#0dcaf0'; // info
                else color = '#198754'; // success

                let radius = el.clientWidth / 2;
                let circumference = 2 * Math.PI * (radius - 10);
                let dashoffset = circumference * (1 - percentage / 100);

                let svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
                svg.setAttribute('class', 'progress-ring');
                svg.setAttribute('width', el.clientWidth);
                svg.setAttribute('height', el.clientHeight);

                let circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
                circle.setAttribute('class', 'progress-ring__circle');
                circle.setAttribute('stroke', color);
                circle.setAttribute('stroke-width', '8');
                circle.setAttribute('stroke-linecap', 'round');
                circle.setAttribute('fill', 'transparent');
                circle.setAttribute('r', radius - 10);
                circle.setAttribute('cx', radius);
                circle.setAttribute('cy', radius);
                circle.style.strokeDasharray = `${circumference} ${circumference}`;
                circle.style.strokeDashoffset = dashoffset;

                svg.appendChild(circle);
                el.appendChild(svg);
            });

            // Progress chart
            const ctx = document.getElementById('progressChart').getContext('2d');
            
            @if (Model.ProgressHistory != null && Model.ProgressHistory.Any())
            {
                <text>
                // Lấy dữ liệu từ lịch sử cập nhật tiến độ
                const progressLabels = [@Html.Raw(string.Join(",", Model.ProgressHistory.Select(p => $"'{p.UpdateDate.ToString("dd/MM/yyyy")}'")))]
                const progressData = [@string.Join(",", Model.ProgressHistory.Select(p => p.ProgressPercentage.ToString()))]
                
                const progressChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: progressLabels,
                        datasets: [{
                            label: 'Tiến độ (%)',
                            data: progressData,
                            borderColor: '#0d6efd',
                            backgroundColor: 'rgba(13, 110, 253, 0.1)',
                            tension: 0.3,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100,
                                ticks: {
                                    callback: function (value) {
                                        return value + '%';
                                    }
                                }
                            }
                        }
                    }
                });
                </text>
            }
            else
            {
                <text>
                // Hiển thị biểu đồ trống khi không có dữ liệu
                const progressChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: [],
                        datasets: [{
                            label: 'Tiến độ (%)',
                            data: [],
                            borderColor: '#0d6efd',
                            backgroundColor: 'rgba(13, 110, 253, 0.1)',
                            tension: 0.3,
                            fill: true
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                mode: 'index',
                                intersect: false,
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                max: 100,
                                ticks: {
                                    callback: function (value) {
                                        return value + '%';
                                    }
                                }
                            }
                        }
                    }
                });
                
                // Hiển thị thông báo không có dữ liệu
                const noDataMessage = document.createElement('div');
                noDataMessage.className = 'text-center text-muted mt-2';
                noDataMessage.innerHTML = '<i class="bi bi-info-circle me-1"></i>Chưa có dữ liệu cập nhật tiến độ';
                ctx.canvas.parentNode.appendChild(noDataMessage);
                </text>
            }
        </script>
}
